close all

%--------------------------------------------------------------------------
% Import information - USER TO MODIFY
%--------------------------------------------------------------------------

%---Index of files to be procesed------------------------------------------
save_check = 0; % 1 = save info, 0 = do not save info 
%--------------------------------------------------------------------------

%---Set script mode--------------------------------------------------------
film_selector = 0;
film_analyser = 1;
film_plotter = 0;
%--------------------------------------------------------------------------

%---main branch directory info---------------------------------------------
conc = '';
sample = 'Ethylene_glycol';
abbre = 'EG';
expNum = 'run1';
branch = '/Volumes/ZIGGY/Thin films/MultiCam/';

folder = fullfile(branch, sample, strcat(conc,abbre),...
    strcat(conc,abbre,'_',expNum,'/'));
folder = fullfile(branch, sample,...
    strcat(conc,abbre,'_',expNum,'/')); 
folder='/Volumes/ZIGGY/Thin films/MultiCam/Ethylene_glycol/EG_run1/';

if ~exist(folder,'dir')
    folder = pwd;
end

film_plot_folder = 'thin-films-plot/';
film_plot_path = strcat(folder, film_plot_folder);

%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

if film_selector == 1

    %---Select files  manually for reduction-----------------------------------
    
    [film_files, film_path] = uigetfile(strcat(folder,'*.txt'),...
        'Select the film data', 'MultiSelect','on');
    
    if iscell(film_files) == 0
        film_files = {film_files};
    end
    
    %--------------------------------------------------------------------------
    % PERFORM FILM SELECTION
    %--------------------------------------------------------------------------
    
    figure(1)
    
    % radius_plot = cell(size(film_files,2),1);
    film_plot_choice = cell(size(film_files,2),1);
    col_choice = cell(size(film_files,2),1);
    
    for i = 1:size(film_files,2)
        T_film = readtable(strcat(film_path, film_files{i}));
        file_parts = split(film_files{i},{'-','.'});
        fileNum = num2str(str2num(file_parts{4}));
        
        radius = T_film.radius;
        red_film = T_film.red_film;
        blue_film = T_film.blue_film;
        
        scatter([-radius; radius], [blue_film;blue_film], 50,'blue')
        hold on
        scatter([-radius; radius], [red_film;red_film], 50,'red')
        hold off
        
        col_prompt = 'Red or blue [1/2]: ';
        col = input(col_prompt);
        while isempty(col)
            col = input(col_prompt);
        end
        
        if col == 1
            %             radius_plot{i} = radius;
            film_plot_choice{i} = red_film;
            col_choice{i} = {strcat('red_',fileNum)};
            
        elseif col == 2
            %             radius_plot{i} = radius;
            film_plot_choice{i} = blue_film;
            col_choice{i} = {strcat('blue_',fileNum)};
            
        elseif col == -1
            %             radius_plot{i} = radius;
            film_plot_choice{i} = [];
            col_choice{i} = [];
            
        end
        
    end
    close all
    
    if save_check == 1
        film_plot_choice = film_plot_choice(~cellfun(@isempty,film_plot_choice));
        col_choice = col_choice(~cellfun(@isempty,col_choice));
        
        version_prompt = 'Input a version number: ';
        version = input(version_prompt,'s');
        version = strcat('-V',version);
        
        file_name = strcat(conc, sample, '-',expNum, '-films-plot', version);
        
        T_film_plot = table(radius, film_plot_choice{1:end},...
            'VariableNames', ['radius', col_choice{1:end}]);
        
        saveData(T_film_plot, film_plot_path, file_name);
        
    end
end

%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

if film_analyser == 1

    if exist('T_film_plot','var') == 1
        
        load_check_prompt = 'Would you like to use currently loaded film data table?: [1/0] ';
        load_check = input(load_check_prompt);
        
        while isempty(load_check) == 1
            load_check = input(load_check_prompt);
        end
    end
    
    if exist('T_film_plot','var') == 0 || load_check == 0
    load_check = 0;
        %---Select files  manually for film reconstruction-------------------------
        
        [film_plot_file, film_plot_path] = uigetfile(strcat(folder,'*.txt'),...
            'Select the thin film data to analyse', 'MultiSelect','off');
        
        % Turn off convert to cell b/c only one file
%         if iscell(film_plot_file) == 0
%             film_plot_file = {film_plot_file};
%         end
%         
        T_film_plot = readtable(strcat(film_plot_path, film_plot_file));
    
    end
    
    numFilms = size(T_film_plot,2)-1;
    
    %--------------------------------------------------------------------------
    % Info for timestamp csv
    %--------------------------------------------------------------------------
    
    csvFile = strcat(conc,sample, '_',expNum,'_TimeStamps.csv');
    csvRead = strcat(folder, csvFile);
    
    if exist(csvRead,'file') == 2
        T = readtable(csvRead, 'Delimiter',',');
        T(end, :) = [];
        
    else
        disp("Select csv file");
        [csvFile, timeStamp_file_path] = uigetfile('*.csv',...
            'Select timestamp file', 'MultiSelect','off');
        csvRead = strcat(timeStamp_file_path,csvFile);
        T = readtable(csvRead, 'Delimiter',',');
        T(end, :) = [];
    end
    
    %--------------------------------------------------------------------------
    % Define timestamp info
    %--------------------------------------------------------------------------
    
    nameID = T.Index;
    red_names = T.red_file_names;
    blue_names = T.blue_file_names;
    sampleName = T.sample;
    cam = T.camera;
    fileNums = T.fileNum;
    secs = T.secs;
    cyCount = T.cyCount;
    cyOff = T.cyOff;
    timeStamps = T.timeStamp;
    cumulTimeStamps = T.cumulStamps;
    
    %--------------------------------------------------------------------------
    
    %--------------------------------------------------------------------------
    % Find useful metrics for plotting
    %--------------------------------------------------------------------------
    
    Hcent = zeros(numFilms,1);
    Hmin = zeros(numFilms,1);
    Hmin_I = zeros(numFilms,1);
    
    Rrim = zeros(numFilms,1);
    
    radius_bar = cell(numFilms,1);
    height_bar = cell(numFilms,1);
    dr = cell(numFilms,1);
    
    dimpArea = zeros(numFilms,1);
    dimpVol = zeros(numFilms,1);
    dimpDrainageRate = zeros(numFilms,1);
    SA_cyl = zeros(numFilms,1);
    
    fileNum_plot = zeros(numFilms,1);
    timeStamp_plot = zeros(numFilms,1);
    
    for i = 1:numFilms
        
        file_parts = split(T_film_plot.Properties.VariableNames{i+1},...
            {'_','-','.'});
        fileNum_plot(i) = str2num(file_parts{2});
        timeStamp_plot(i) = cumulTimeStamps(find(fileNums == fileNum_plot(i)));
        
        Hcent(i) = T_film_plot{1,i+1};
        [Hmin(i), Hmin_I(i)] = nanmin(T_film_plot{:,i+1});
        Rrim(i) = T_film_plot{:,1}(Hmin_I(i));
        
        %dimpArea = trapz(T_film_plot{1:Hmin_I(i),i+1}); % add x-corrds
        
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        
        %%% Use trapz approach to improve dimple volume accuracy???
        
%         radius_bar{i} = 0.5*(T_film_plot{2:Hmin_I(i),1} + T_film_plot{1:Hmin_I(i)-1,1});
%         height_bar{i} = 0.5*(T_film_plot{2:Hmin_I(i),i+1} + T_film_plot{1:Hmin_I(i)-1,i+1});
%         dr{i} = T_film_plot{2:Hmin_I(i),1} - T_film_plot{1:Hmin_I(i)-1,1};
        
        radius_bar{i} = 0.5*(T_film_plot{2:Hmin_I(1),1} + T_film_plot{1:Hmin_I(1)-1,1});
        height_bar{i} = 0.5*(T_film_plot{2:Hmin_I(1),i+1} + T_film_plot{1:Hmin_I(1)-1,i+1});
        dr{i} = T_film_plot{2:Hmin_I(1),1} - T_film_plot{1:Hmin_I(1)-1,1};


        dimpVol(i) = sum(2*pi.*radius_bar{i}.*(height_bar{i}/1000).*dr{i});
        
%         dimpVol(i) = sum(pi.*(T_film_plot{1:Hmin_I(i),1}).^2.*...
%             ((T_film_plot{1:Hmin_I(i),i+1}-T_film_plot{2:Hmin_I(i)+1,i+1})/1000))...
%             + pi*T_film_plot{Hmin_I(i),1}^2*(T_film_plot{Hmin_I(i),i+1}/1000);
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        
        
%         sum(pi*r^2*delta dimp H) + pi*r^2 @ rim * min H;
%         SA_cyl(i) = 2*pi*Rrim(i)*(Hmin(i)/1000)+2*pi*(Rrim(i))^2;

%         SA_cyl(i) = 2*pi*Rrim(i)*(Hmin(i)/1000);
        SA_cyl(i) = 2*pi*Rrim(1)*(Hmin(i)/1000);
    end
    
    flowRate = diff(dimpVol)./(diff(timeStamp_plot));
    flowRate(numFilms) = NaN;
    
% CHANGE TO CENTRAL DIFFERENCING
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%     dT = timeStamp_plot(2) - timeStamp_plot(1);
%     for i = 2:length(numFilms)-1
%         flowRate(i) = (dimpVol(i+1) - dimpVol(i-1))/(2*dT);
%     end
%     
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    shearRate = -(flowRate./SA_cyl)./(Hmin/2000); % ?????????????
    % Note convert height to micron and divide by 2
    
    % if exist('T','var')
    %     timeStamps = T.cumulStamps(selected);
    % else
    %     timeStamp_plot = selected;
    % end
    
    if save_check == 1
        
        T_film_metrics = table(fileNum_plot,timeStamp_plot,round(Hcent,4),...
            round(Hmin,4),round(Rrim,4),...
            round(dimpVol,4),round(flowRate,4),round(shearRate,4),...
            'VariableNames', {'fileNum', 'timeStamp', 'Hcent_nm',...
            'Hmin_nm', 'Rrim_micron', 'dimpVol_micron_cubed',...
            'flowRate_micron_cubed_persec', 'shearRate_persec'});
        
        if load_check == 0
            file_name_metrics = strcat(film_plot_file(1:end-4), '-metrics');
        
        else
            file_name = strcat(conc, sample, '-',expNum, '-films-plot', version);
            file_name_metrics = strcat(file_name, '-metrics');
        end
        
        saveData(T_film_metrics, film_plot_path, file_name_metrics);
    end 
end
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

if film_plotter == 1
    
    if exist('T_film_plot','var') == 1
        
        load_check_prompt = 'Would you like to use currently loaded film data table?: [1/0] ';
        load_check = input(load_check_prompt);
        
        while isempty(load_check) == 1
            load_check = input(load_check_prompt);
        end
    end
    
    if exist('T_film_plot','var') == 0 || load_check == 0
    load_check = 0;
        %---Select files  manually for film plotting-------------------------
        disp('Select film plot data');
        [film_plot_file, film_plot_path] = uigetfile(strcat(folder,'*.txt'),...
            'Select the thin film data to analyse', 'MultiSelect','off');
        
        % Turn off convert to cell b/c only one file
%         if iscell(film_plot_file) == 0
%             film_plot_file = {film_plot_file};
%         end
%         
        T_film_plot = readtable(strcat(film_plot_path, film_plot_file));
    
    end
    
    if exist('T_film_metrics','var') == 1
        
        load_check_prompt = 'Would you like to use currently loaded film metrics table?: [1/0] ';
        load_check = input(load_check_prompt);
        
        while isempty(load_check) == 1
            load_check = input(load_check_prompt);
        end
    end
    
    if exist('T_film_metrics','var') == 0 || load_check == 0
    
        %---Select files  manually for film plotting-------------------------
        disp('Select film metrics data');
        [film_metrics_file, film_metrics_path] = uigetfile(strcat(folder,'*.txt'),...
            'Select the thin film data to analyse', 'MultiSelect','off');
        
        % Turn off convert to cell b/c only one file
%         if iscell(film_plot_file) == 0
%             film_plot_file = {film_plot_file};
%         end
%         
        T_film_metrics = readtable(strcat(film_metrics_path,film_metrics_file));
    
    end
    %--------------------------------------------------------------------------
    % Make figures
    %--------------------------------------------------------------------------
    
    % make function to take tabulated input
    film_plot(T_film_metrics, T_film_plot)
    
    if save_check == 1
        
        version_prompt = 'Input a version number: ';
        version = input(version_prompt,'s');
        version = strcat('V',version);
        
       print('-f1', '-r300','-dpng',...
           fullfile(folder,film_plot_folder,strcat(abbre,'_',expNum,...
           '_films_',version, '.png'))); 
       
       print('-f2', '-r300','-dpng',...
           fullfile(folder,film_plot_folder,strcat(abbre,'_',expNum,...
           '_Hcent_',version,'.png')));
       
       print('-f3', '-r300','-dpng',...
           fullfile(folder,film_plot_folder,strcat(abbre,'_',expNum,...
           '_Hmin_',version,'.png')));
       
       print('-f4', '-r300','-dpng',...
           fullfile(folder,film_plot_folder,strcat(abbre,'_',expNum,...
           '_Rdimp_',version,'.png')));
    end
        
       
    
    %--------------------------------------------------------------------------
end

